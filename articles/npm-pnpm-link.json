{
  "metadata": {
    "title": "How use npm link in pnpm overwrites",
    "description": "If you work on bigger project with more packages you will want to use pnpm, probably.",
    "date": "September 2022"
  },
  "image": {
    "url": "https://res.cloudinary.com/dctc6iyms/image/upload/v1683554783/career_page/edge2edge-media-t1OalCBUYRc-unsplash_pf9tcz.jpg",
    "alt": "If you work on bigger project with more packages you will want to use pnpm, probably."
  },
  "content": [
    {
      "type": "heading",
      "level": 3,
      "children": [{ "type": "text", "text": "How to use npm link in pnpm overwrites" }]
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "text": "If you're working on a larger project with more packages, you will probably want to use pnpm."
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "children": [{ "type": "text", "text": "What is pnpm?" }]
    },
    {
      "type": "paragraph",
      "children": [
        {
          "type": "text",
          "text": "Alternative of node package manager `npm`, but faster and more efficient. When I started with pnpm, I tried to link local packages where my main project uses `pnpm` and other local packages use the standard `npm`. When I used the standard method of linking a project using npm link or pnpm link, I always got the error that the package does not exist. I decided to write some steps below, how use the link when using pnpm overrides."
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "children": [{ "type": "text", "text": "Steps" }]
    },
    {
      "type": "heading",
      "level": 3,
      "children": [{ "type": "text", "text": "Note" }]
    }
  ]
}

// ### How to use npm link in pnpm overwrites

// > _If you're working on a larger project with more packages, you will probably want to use pnpm._

// <img src="https://res.cloudinary.com/dctc6iyms/image/upload/v1683554783/career_page/edge2edge-media-t1OalCBUYRc-unsplash_pf9tcz.jpg" alt="link" />

// `"pnpm": { "overrides": { "my-package-foo": "3.4.0", .... } },`

// ##### What is pnpm?

// Alternative of node package manager `npm`, but faster and more efficient.

// - [pnpm](https://github.com/pnpm/pnpm 'pnpm')

// When I started with pnpm, I tried to link local packages where my main project uses `pnpm` and other local packages use the standard `npm`. When I used the standard method of linking a project using npm link or pnpm link, I always got the error that the package does not exist.

// I decided to write some steps below, how use the link when using pnpm overrides.

// ##### Steps:

// - The repository where is use `npm` can be link with `npm link`.

//       In the package, type `npm link` and then go to the main project where the above link package is used and type `npm link package-name-from-package.json` example `npm link @foo/basic` and that's it.

// - The repository where is use `pnpm` with overrides.

//       If you want to override the package version in the `pnpm` overrides, you need to type this into your package `"overrides": "link:../foo-basic"` *write path into package no path into dist* and then run `pnpm i` and that's it.

// ##### Note:

// If you are using VS code, you are goint to need reload your IDE, sometimes - `developer: Reload the window`.
